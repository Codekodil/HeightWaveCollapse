//Generated with https://github.com/Codekodil/UnhedderCodeGen
#include"WaveField.h"
#include"WaveFunction.h"
#include"WaveList.h"
#include<memory>
#include<vector>
#include<string>
#include<exception>
thread_local std::string exceptionMessage="";
extern"C"{
__declspec(dllexport)void*__stdcall Wrapper_Shared_Ptr_Get(std::shared_ptr<void>*self){return self->get();}
__declspec(dllexport)int __stdcall Wrapper_Get_Exception(char*buffer,int maxSize){int length=std::min(maxSize,(int)exceptionMessage.size());memcpy(buffer,exceptionMessage.c_str(),length);return length;}
#pragma warning(push)
#pragma warning(disable:4297)
__declspec(dllexport)HeightWaveCollapseBase::CellInitializer*__stdcall Wrapper_New_HeightWaveCollapseBase_CellInitializer_0(){try{auto pointer_result = new HeightWaveCollapseBase::CellInitializer();return pointer_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::WaveList* __stdcall Wrapper_Call_HeightWaveCollapseBase_CellInitializer_Generate_0(HeightWaveCollapseBase::CellInitializer* self,int x_,int y_){try{if(!self)throw std::exception("NullReferenceException");HeightWaveCollapseBase::WaveList* value_result;value_result=self->Generate(x_,y_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Event_HeightWaveCollapseBase_CellInitializer_InitCell(HeightWaveCollapseBase::CellInitializer* self,void*(__stdcall*event)(int x_,int y_)){try{if(!self)throw std::exception("NullReferenceException");self->InitCell=event;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Delete_HeightWaveCollapseBase_CellInitializer(HeightWaveCollapseBase::CellInitializer* self){try{delete self;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::CellCollapse*__stdcall Wrapper_New_HeightWaveCollapseBase_CellCollapse_0(){try{auto pointer_result = new HeightWaveCollapseBase::CellCollapse();return pointer_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Event_HeightWaveCollapseBase_CellCollapse_CollapseCell(HeightWaveCollapseBase::CellCollapse* self,void(__stdcall*event)(int x_,int y_,int* id_,int* height_)){try{if(!self)throw std::exception("NullReferenceException");self->CollapseCell=event;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Delete_HeightWaveCollapseBase_CellCollapse(HeightWaveCollapseBase::CellCollapse* self){try{delete self;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::WaveField*__stdcall Wrapper_New_HeightWaveCollapseBase_WaveField_0(int chunkWidth_,int chunkHeight_){try{auto pointer_result = new HeightWaveCollapseBase::WaveField(chunkWidth_,chunkHeight_);return pointer_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)bool __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveField_AddChunk_0(HeightWaveCollapseBase::WaveField* self,int chunkX_,int chunkY_,HeightWaveCollapseBase::CellInitializer* initializer_){try{if(!self)throw std::exception("NullReferenceException");bool value_result;value_result=self->AddChunk(chunkX_,chunkY_,initializer_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::WaveList* __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveField_ListAt_1(HeightWaveCollapseBase::WaveField* self,int x_,int y_){try{if(!self)throw std::exception("NullReferenceException");HeightWaveCollapseBase::WaveList* value_result;value_result=self->ListAt(x_,y_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveField_Collapse_2(HeightWaveCollapseBase::WaveField* self,HeightWaveCollapseBase::WaveFunction* func_,HeightWaveCollapseBase::CellCollapse* collapse_){try{if(!self)throw std::exception("NullReferenceException");self->Collapse(func_,collapse_);return ;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Delete_HeightWaveCollapseBase_WaveField(HeightWaveCollapseBase::WaveField* self){try{delete self;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::WaveFunction*__stdcall Wrapper_New_HeightWaveCollapseBase_WaveFunction_0(int possibilities_){try{auto pointer_result = new HeightWaveCollapseBase::WaveFunction(possibilities_);return pointer_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)bool __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveFunction_SetPossibilities_0(HeightWaveCollapseBase::WaveFunction* self,int index_,HeightWaveCollapseBase::WaveList* left_,HeightWaveCollapseBase::WaveList* up_,HeightWaveCollapseBase::WaveList* right_,HeightWaveCollapseBase::WaveList* down_){try{if(!self)throw std::exception("NullReferenceException");bool value_result;value_result=self->SetPossibilities(index_,left_,up_,right_,down_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Delete_HeightWaveCollapseBase_WaveFunction(HeightWaveCollapseBase::WaveFunction* self){try{delete self;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)HeightWaveCollapseBase::WaveList*__stdcall Wrapper_New_HeightWaveCollapseBase_WaveList_0(int size_){try{auto pointer_result = new HeightWaveCollapseBase::WaveList(size_);return pointer_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)int __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveList_GetSize_0(HeightWaveCollapseBase::WaveList* self){try{if(!self)throw std::exception("NullReferenceException");int value_result;value_result=self->GetSize();return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)bool __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveList_Get_1(HeightWaveCollapseBase::WaveList* self,int index_,int* id_,int* height_){try{if(!self)throw std::exception("NullReferenceException");bool value_result;value_result=self->Get(index_,id_,height_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)bool __stdcall Wrapper_Call_HeightWaveCollapseBase_WaveList_Set_2(HeightWaveCollapseBase::WaveList* self,int index_,int id_,int height_){try{if(!self)throw std::exception("NullReferenceException");bool value_result;value_result=self->Set(index_,id_,height_);return value_result;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
__declspec(dllexport)void __stdcall Wrapper_Delete_HeightWaveCollapseBase_WaveList(HeightWaveCollapseBase::WaveList* self){try{delete self;}catch(std::exception&e){exceptionMessage=e.what();throw;}catch(...){exceptionMessage="unknown";throw;}}
}
#pragma warning(pop)
